string = "#!/usr/bin/env python\n\nimport rospy\nfrom std_msgs.msg import *\nfrom geometry_msgs.msg import *\n\ndata = 0.0\n\n###########################################\n\ninitial_param = {'param1': 0.0}\nparam = {'param1': 0.0}\nf_name = \"param\"\n\nimport json\nimport os\n\ndef read_json_file(file_name):\n  if os.path.exists(file_name):\n    with open(file_name, 'r') as f:\n      json_load = json.load(f)\n      return json_load, True\n  return None, False\n\ndef write_json_file(file_name, dict_data):\n  with open(file_name, 'w') as f:\n    json.dump(dict_data, f, indent=2)\n\ndef initialize_file():\n  global initial_param\n  global f_name\n  write_json_file(f_name, initial_param)\n\ndef update_file():\n  global param\n  global f_name\n  write_json_file(f_name, initial_param)\n###########################################\n\ndef callback(msg):\n  global data\n  data = msg.data\n  print(\"callback\",data)\n\n  #########################\n  param['param1'] = data \n  update_file()\n  ########################\n\nrospy.init_node(\"aaa\")\npub = rospy.Publisher(\"~output\", Float64, queue_size=10)\nrospy.Subscriber(\"~input\", Float64, callback)\n\n##########################################\nfile_data, read_sucess = read_json_file(f_name)\nif read_sucess == False:\n  initialize_file()\nelse:\n  try:\n    data = file_data['param1']\n    print(data)\n  except:\n    initialize_file()\n##########################################\n\nr = rospy.Rate(10)\n\nwhile not rospy.is_shutdown():\n  pub.publish(Float64(data))\n  print(\"publish\",data)\n  r.sleep()\n"

print(string)
